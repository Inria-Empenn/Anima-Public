if(NOT ANIMA_USE_FILE_INCLUDED)

   set(ANIMA_USE_FILE_INCLUDED 1)

   set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${ANIMA_CMAKE_DIRS})

   if (WIN32)
     add_definitions(-D_USE_MATH_DEFINES)
     set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /fp:strict")
   endif()

   include_directories(${ANIMA_INCLUDE_DIRS})
   link_directories(${ANIMA_LIBRARY_DIRS})
   include(ANIMAExports)
   include(ITKLibs)

   set(BUILD_TOOLS ${BUILD_TOOLS})
   set(BUILD_MODULE_MATHS ${BUILD_MODULE_MATHS})
   set(BUILD_MODULE_FILTERING ${BUILD_MODULE_FILTERING})
   set(BUILD_MODULE_REGISTRATION ${BUILD_MODULE_REGISTRATION})
   set(BUILD_MODULE_QUANTITATIVE_MRI $BUILD_MODULE_QUANTITATIVE_MRI})
   set(BUILD_MODULE_DIFFUSION $BUILD_MODULE_DIFFUSION})
   set(BUILD_MODULE_SEGMENTATION ${BUILD_MODULE_SEGMENTATION})

   set(ITK_DIR ${ITK_DIR})
   find_package(ITK REQUIRED)
   include(${ITK_USE_FILE})

   set(TCLAP_INCLUDE_DIR ${TCLAP_INCLUDE_DIR})
   include_directories(${TCLAP_INCLUDE_DIR})
   
   set(Boost_INCLUDE_DIR ${Boost_INCLUDE_DIR})
   FIND_PACKAGE(Boost 1.40.0 REQUIRED)

   set(USE_NLOPT ${USE_NLOPT})
   if (USE_NLOPT)
     set(NLOPT_INCLUDE_DIR ${NLOPT_INCLUDE_DIR})
     include_directories(${NLOPT_INCLUDE_DIR})
     set(NLOPT_LIBRARY_DIR ${NLOPT_LIBRARY_DIR})
     set(NLOPT_LIBRARY ${NLOPT_LIBRARY})
     set(NLOPT_FOUND 1)
   endif(USE_NLOPT)

   set(USE_GMP ${USE_GMP})
   if (USE_GMP)
     set(GMP_INCLUDE_DIR ${GMP_INCLUDE_DIR})
     include_directories(${GMP_INCLUDE_DIR})
     set(GMP_LIBRARY_DIR ${GMP_LIBRARY_DIR})
     set(GMP_LIBRARY ${GMP_LIBRARY})
     set(GMP_FOUND 1)
   endif(USE_GMP)

   set(USE_MPFR ${USE_MPFR})
   if (USE_MPFR)
     set(MPFR_INCLUDE_DIR ${MPFR_INCLUDE_DIR})
     include_directories(${MPFR_INCLUDE_DIR})
     set(MPFR_LIBRARY_DIR ${MPFR_LIBRARY_DIR})
     set(MPFR_LIBRARY ${MPFR_LIBRARY})
     set(MPFR_FOUND 1)
   endif(USE_MPFR)

   set(USE_FLINT ${USE_FLINT})
   if (USE_FLINT)
     set(FLINT_INCLUDE_DIR ${FLINT_INCLUDE_DIR})
     include_directories(${FLINT_INCLUDE_DIR})
     set(FLINT_LIBRARY_DIR ${FLINT_LIBRARY_DIR})
     set(FLINT_LIBRARY ${FLINT_LIBRARY})
     set(FLINT_FOUND 1)
   endif(USE_FLINT)

   set(USE_ARB ${USE_ARB})
   if (USE_ARB)
     set(ARB_INCLUDE_DIR ${ARB_INCLUDE_DIR})
     include_directories(${ARB_INCLUDE_DIR})
     set(ARB_LIBRARY_DIR ${ARB_LIBRARY_DIR})
     set(ARB_LIBRARY ${ARB_LIBRARY})
     set(ARB_FOUND 1)
   endif(USE_ARB)

   set(TinyXML2_INCLUDE_DIR ${TinyXML2_INCLUDE_DIR})
   include_directories(${TinyXML2_INCLUDE_DIR})
   set(TinyXML2_LIBRARY_DIR ${TinyXML2_LIBRARY_DIR})
   set(TinyXML2_LIBRARY ${TinyXML2_LIBRARY})

   set(USE_VTK ${USE_VTK})
   if (USE_VTK)
     set(VTK_DIR ${VTK_DIR})
     find_package(VTK REQUIRED COMPONENTS vtkCommonCore vtkFiltersCore vtkIOXML vtkIOLegacy vtksys)
     include(${VTK_USE_FILE})
   endif(USE_VTK)
   
   SET(USE_RPI ${USE_RPI})
   if (USE_RPI)
     set(RPI_DIR ${RPI_DIR})
     find_package(RPI REQUIRED)
     include(${RPI_USE_FILE})
   endif(USE_RPI)

endif(NOT ANIMA_USE_FILE_INCLUDED)
